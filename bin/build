#!/usr/bin/env bash

source "$(dirname "${BASH_SOURCE[0]}")/_utils.sh"


function usage() {
    declare script_name="$0"

    echo "$script_name [-h|--help] SERVICE"
    echo
    echo "Options:"
    echo "  -h|--help      : Display this help message"
    echo
    echo "Arguments:"
    echo "  SERVICE: the name of the service to build (e.g. nginx)"
}


# Build service image
#
# Usage: build SERVICE
function build() {
    if [[ -z $1 ]]; then
        echo "build: service name is missing, see usage."
        exit 1
    fi

    local service=$1
    local image_path=$(_get_service_image_path $service)
    local version=$(_get_base_image_tag $service)
    local tag=$(_get_target_image_tag $service)

    echo -e "\033[34m**** BUILD PARAMETERS ****"
    echo "Service:      $service"
    echo "Dockerfile:   $image_path"
    echo "Base version: $version"
    echo "Target image: $tag"
    echo -e "**************************\033[0m"

    cd $(dirname $image_path) && \
        docker build -t $tag .
}


function main() {
    declare program="$0"

    local service

    while [[ "$#" -ge "1" ]]; do
        local key="$1"
        shift

        case "$key" in
            -h|--help|help)
                usage "$program"
                exit 0
                ;;
            *)
                # Check if $key is a service name with a defined Dockerfile
                _check_service_image_path $key
                service=$key
        esac
    done

    build $service
}

main "$@"
