#!/usr/bin/env bash

source "$(dirname "${BASH_SOURCE[0]}")/_utils.sh"


function usage() {
    declare script_name="$0"

    echo "$script_name [-h|--help] SERVICE"
    echo
    echo "Options:"
    echo "  -h|--help      : Display this help message"
    echo
    echo "Arguments:"
    echo "  IMAGE: the name of the image to build with or without a tag (e.g. nginx, nginx:1.13)."
}


# Publish service image to dockerhub
#
# Usage: publish SERVICE
function publish() {
    if [[ -z $2 ]]; then
        echo "publish: image tag is missing, see usage."
        exit 1
    fi

    if [[ -z $1 ]]; then
        echo "publish: image name is missing, see usage."
        exit 1
    fi

    local name=$1
    local tag=$2
    _check_image_path $name $tag

    local fullname=$(_get_target_image_fullname $name $tag)
    _check_target_image_exists $name $tag

    echo -e "\033[34m**** PUBLISH PARAMETERS ****"
    echo "Target image: ${fullname}"
    echo -e "**************************\033[0m"

    docker push $fullname
}


function main() {
    declare program="$0"

    local image

    while [[ "$#" -ge "1" ]]; do
        local key="$1"
        shift

        case "$key" in
            -h|--help|help)
                usage "$program"
                exit 0
                ;;
            *)
                image=$key
        esac
    done

    local image_array=(${image//:/ })

    if [[ ${#image_array[@]} -eq "2" ]]; then
        publish ${image_array[0]} ${image_array[1]}
    else
        if [[ ${#image_array[@]} -eq "1" ]]; then
            for tag in $(ls docker/images/$image); do
                publish $image $tag
            done
        else
            echo "Not a valid image name (e.g. nginx or nginx:1.13)"
            exit 1
        fi
    fi

}

main "$@"
